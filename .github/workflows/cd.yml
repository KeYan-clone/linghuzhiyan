name: CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push (matrix)
        uses: docker/bake-action@v5
        with:
          workdir: .
          pull: true
          files: |
            ./docker-bake.hcl
          targets: |
            discovery-server
            config-server
            gateway
            monitor-service
            auth-service
            user-service
          set: |
            *.tags=${{ env.REGISTRY }}/${{ env.OWNER }}/{{target}}:${{ env.IMAGE_TAG }}
            *.output=type=registry

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.30.0'

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.1'

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${KUBE_CONFIG}" > ~/.kube/config
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: Create/Update image pull secret (optional)
        if: ${{ secrets.REGISTRY_USERNAME && secrets.REGISTRY_PASSWORD }}
        run: |
          kubectl create secret docker-registry regcred \
            --docker-server=${{ env.REGISTRY }} \
            --docker-username='${{ secrets.REGISTRY_USERNAME }}' \
            --docker-password='${{ secrets.REGISTRY_PASSWORD }}' \
            --dry-run=client -o yaml | kubectl apply -f -
          kubectl patch serviceaccount default -p '{"imagePullSecrets":[{"name":"regcred"}]}' --type=merge || true

      - name: Set images via kustomize
        working-directory: k8s/overlays/cd
        run: |
          kustomize edit set image \
            discovery-server=${{ env.REGISTRY }}/${{ env.OWNER }}/discovery-server:${{ env.IMAGE_TAG }} \
            config-server=${{ env.REGISTRY }}/${{ env.OWNER }}/config-server:${{ env.IMAGE_TAG }} \
            gateway=${{ env.REGISTRY }}/${{ env.OWNER }}/gateway:${{ env.IMAGE_TAG }} \
            monitor-service=${{ env.REGISTRY }}/${{ env.OWNER }}/monitor-service:${{ env.IMAGE_TAG }} \
            auth-service=${{ env.REGISTRY }}/${{ env.OWNER }}/auth-service:${{ env.IMAGE_TAG }} \
            user-service=${{ env.REGISTRY }}/${{ env.OWNER }}/user-service:${{ env.IMAGE_TAG }}

      - name: Apply manifests
        run: |
          kustomize build k8s/overlays/cd | kubectl apply -f -
