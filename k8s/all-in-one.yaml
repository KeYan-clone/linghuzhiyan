# All-in-one deployments and services for linghuzhiyan core stack
---
apiVersion: v1
kind: Secret
metadata:
  name: security-secret
type: Opaque
stringData:
  # 用于 jwt.secret 的环境变量（开发默认值，生产请替换并使用密文）
  JWT_SECRET: "change-me-dev"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discovery-server
  labels:
    app: discovery-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discovery-server
  template:
    metadata:
      labels:
        app: discovery-server
    spec:
      containers:
        - name: discovery-server
          image: discovery-server:j21
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8761
          env:
            - name: JAVA_OPTS
              value: "-Dserver.address=0.0.0.0"
          readinessProbe:
            tcpSocket:
              port: 8761
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8761
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: discovery-server
spec:
  type: ClusterIP
  selector:
    app: discovery-server
  ports:
    - port: 8761
      targetPort: 8761
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-server
  labels:
    app: config-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: config-server
  template:
    metadata:
      labels:
        app: config-server
    spec:
      containers:
        - name: config-server
          image: config-server:j21
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8888
          env:
            - name: JAVA_OPTS
              value: "-Dserver.address=0.0.0.0"
          readinessProbe:
            tcpSocket:
              port: 8888
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8888
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: config-server
spec:
  type: ClusterIP
  selector:
    app: config-server
  ports:
    - port: 8888
      targetPort: 8888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: gateway:j21
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: JAVA_OPTS
              value: "-Dserver.address=0.0.0.0"
            # 提供 jwt.secret
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: security-secret
                  key: JWT_SECRET
            - name: SPRING_APPLICATION_JSON
              value: |
                {
                  "server": {"port": 8080},
                  "eureka": {"client": {"serviceUrl": {"defaultZone": "http://admin:admin123@discovery-server:8761/eureka/"}}},
                  "spring": {"cloud": {"config": {"enabled": false}}},
                  "jwt": {"secret": "${JWT_SECRET}", "tokenHeader": "Authorization", "tokenHead": "Bearer"}
                }
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 40
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
spec:
  type: LoadBalancer
  selector:
    app: gateway
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitor-service
  labels:
    app: monitor-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitor-service
  template:
    metadata:
      labels:
        app: monitor-service
    spec:
      containers:
        - name: monitor-service
          image: monitor-service:j21
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8090
          env:
            - name: JAVA_OPTS
              value: "-Dserver.address=0.0.0.0"
            - name: SPRING_APPLICATION_JSON
              value: |
                {
                  "server": {"port": 8090},
                  "eureka": {"client": {"serviceUrl": {"defaultZone": "http://admin:admin123@discovery-server:8761/eureka/"}}}
                }
          readinessProbe:
            tcpSocket:
              port: 8090
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8090
            initialDelaySeconds: 40
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: monitor-service
spec:
  type: ClusterIP
  selector:
    app: monitor-service
  ports:
    - port: 8090
      targetPort: 8090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  labels:
    app: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
        - name: auth-service
          image: auth-service:j21
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
          env:
            - name: JAVA_OPTS
              value: "-Dserver.address=0.0.0.0"
            # 提供 jwt.secret
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: security-secret
                  key: JWT_SECRET
            - name: SPRING_APPLICATION_JSON
              value: |
                {
                  "server": {"port": 8081},
                  "eureka": {"client": {"serviceUrl": {"defaultZone": "http://admin:admin123@discovery-server:8761/eureka/"}}},
                  "spring": {"cloud": {"config": {"enabled": false}},
                    "datasource": {
                      "url": "jdbc:mysql://${DB_HOST}:${DB_PORT}/linghuzhiyan_auth?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true",
                      "username": "${SPRING_DATASOURCE_USERNAME}",
                      "password": "${SPRING_DATASOURCE_PASSWORD}",
                      "driver-class-name": "com.mysql.cj.jdbc.Driver"
                    },
                    "jpa": {"hibernate": {"ddl-auto": "update"}}},
                  "jwt": {"secret": "${JWT_SECRET}", "tokenHeader": "Authorization", "tokenHead": "Bearer", "expiration": "${JWT_EXPIRATION:86400}"}
                }
          envFrom:
            - configMapRef:
                name: auth-service-env
            - secretRef:
                name: auth-db-secret
          readinessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  type: ClusterIP
  selector:
    app: auth-service
  ports:
    - port: 8081
      targetPort: 8081
---
# auth-service DB config and secret
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-env
data:
  DB_HOST: "10.128.55.225"
  DB_PORT: "3306"
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-db-secret
type: Opaque
stringData:
  SPRING_DATASOURCE_USERNAME: "root"
  SPRING_DATASOURCE_PASSWORD: "lop*123456lop*"
---
# user-service config and secrets
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service-env
data:
  DB_HOST: "10.128.55.225"
  DB_PORT: "3306"
  SPRING_DATASOURCE_URL: "jdbc:mysql://10.128.55.225:3306/linghuzhiyan?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&useUnicode=true&characterEncoding=utf8"
  SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
  SPRING_PROFILES_ACTIVE: "local"
  EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://admin:admin123@discovery-server:8761/eureka/"
  EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://admin:admin123@discovery-server:8761/eureka/"
  SPRING_CLOUD_CONFIG_ENABLED: "false"
  MINIO_ENDPOINT: "http://10.128.55.225:9000"
  MINIO_BUCKETNAME: "linghuzhiyan"
  MINIO_BUCKET_NAME: "linghuzhiyan"
---
apiVersion: v1
kind: Secret
metadata:
  name: user-db-secret
type: Opaque
stringData:
  SPRING_DATASOURCE_USERNAME: "root"
  SPRING_DATASOURCE_PASSWORD: "lop*123456lop*"
---
apiVersion: v1
kind: Secret
metadata:
  name: user-minio-secret
type: Opaque
stringData:
  MINIO_ACCESSKEY: "keyan"
  MINIO_SECRETKEY: "lop*123456lop*"
  MINIO_ACCESS_KEY: "keyan"
  MINIO_SECRET_KEY: "lop*123456lop*"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      initContainers:
        - name: wait-for-db
          image: discovery-server:j21
          envFrom:
            - configMapRef:
                name: user-service-env
          command: ["bash", "-c"]
          args:
            - >-
                    "datasource": {
                      "url": "jdbc:mysql://${DB_HOST}:${DB_PORT}/linghuzhiyan_auth?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true",
                      "username": "${SPRING_DATASOURCE_USERNAME}",
                      "password": "${SPRING_DATASOURCE_PASSWORD}",
                      "driver-class-name": "com.mysql.cj.jdbc.Driver"
                    },
                    "jpa": {"hibernate": {"ddl-auto": "update"}}},
              for i in $(seq 1 60); do if timeout 2 bash -c "</dev/tcp/$DB_HOST/$DB_PORT" 2>/dev/null; then echo "DB reachable"; exit 0; fi; echo "waiting for $DB_HOST:$DB_PORT"; sleep 2; done; echo "DB not reachable: $DB_HOST:$DB_PORT"; exit 1;
      containers:
          envFrom:
            - configMapRef:
                name: auth-service-env
            - secretRef:
                name: auth-db-secret
        - name: user-service
          image: user-service:j21
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: JAVA_OPTS
              value: "-Dserver.address=0.0.0.0"
            - name: MINIO_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: user-service-env
                  key: MINIO_ENDPOINT
            - name: MINIO_BUCKETNAME
              valueFrom:
                configMapKeyRef:
                  name: user-service-env
                  key: MINIO_BUCKETNAME
            - name: MINIO_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: user-service-env
                  key: MINIO_BUCKET_NAME
            - name: MINIO_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: user-minio-secret
                  key: MINIO_ACCESSKEY
            - name: MINIO_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: user-minio-secret
                  key: MINIO_SECRETKEY
            - name: SPRING_APPLICATION_JSON
              value: |
                {
                  "minio": {
                    "endpoint": "${MINIO_ENDPOINT}",
                    "accessKey": "${MINIO_ACCESSKEY}",
                    "secretKey": "${MINIO_SECRETKEY}",
                    "bucketName": "${MINIO_BUCKETNAME:${MINIO_BUCKET_NAME:linghuzhiyan}}"
                  },
                  "eureka": {
                    "client": {
                      "serviceUrl": {
                        "defaultZone": "http://admin:admin123@discovery-server:8761/eureka/"
                      }
                    }
                  }
                }
          envFrom:
            - configMapRef:
                name: user-service-env
            - secretRef:
                name: user-db-secret
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  type: ClusterIP
  selector:
    app: user-service
  ports:
    - port: 8080
      targetPort: 8080
