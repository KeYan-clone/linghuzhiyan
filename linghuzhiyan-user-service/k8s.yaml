apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      initContainers:
        - name: wait-for-db
          image: discovery-server:j21
          envFrom:
            - configMapRef:
                name: user-service-env
          command: ["bash", "-c"]
          args:
            - >-
              for i in $(seq 1 60); do if timeout 2 bash -c "</dev/tcp/$DB_HOST/$DB_PORT" 2>/dev/null; then echo "DB reachable"; exit 0; fi; echo "waiting for $DB_HOST:$DB_PORT"; sleep 2; done; echo "DB not reachable: $DB_HOST:$DB_PORT"; exit 1;
      containers:
        - name: user-service
          image: user-service:j21 # 使用本地构建镜像
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: JAVA_OPTS
              value: "-Dserver.address=0.0.0.0"
            # 将环境变量映射为 Spring 属性
            - name: MINIO_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: user-service-env
                  key: MINIO_ENDPOINT
            - name: MINIO_BUCKETNAME
              valueFrom:
                configMapKeyRef:
                  name: user-service-env
                  key: MINIO_BUCKETNAME
            - name: MINIO_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: user-service-env
                  key: MINIO_BUCKET_NAME
            - name: MINIO_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: user-minio-secret
                  key: MINIO_ACCESSKEY
            - name: MINIO_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: user-minio-secret
                  key: MINIO_SECRETKEY
            - name: SPRING_APPLICATION_JSON
              value: |
                {
                  "minio": {
                    "endpoint": "${MINIO_ENDPOINT}",
                    "accessKey": "${MINIO_ACCESSKEY}",
                    "secretKey": "${MINIO_SECRETKEY}",
                    "bucketName": "${MINIO_BUCKETNAME:${MINIO_BUCKET_NAME:linghuzhiyan}}"
                  },
                  "eureka": {
                    "client": {
                      "serviceUrl": {
                        "defaultZone": "http://admin:admin123@discovery-server:8761/eureka/"
                      }
                    }
                  }
                }
          envFrom:
            - configMapRef:
                name: user-service-env
            - secretRef:
                name: user-db-secret
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  type: ClusterIP
  selector:
    app: user-service
  ports:
    - port: 8080
      targetPort: 8080
